/*
  * Generated by cppsrc.sh
  * On 2015-03-07 23:01:04,40
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef MenuWidget_H
#define MenuWidget_H

namespace MoonGlare {
namespace Modules {
namespace MenuScene {

template<class T>
class MenuWidget : public T {
public:
	MenuWidget(MenuScene *OwnerScene, SharedMenuItemInfo Info, GUI::iWidget *OwnerWidget, int Id = 0) : 
		T(OwnerWidget), m_ItemInfo(Info), m_OwnerScene(OwnerScene), m_Id(Id) { 
	}

	//virtual void OnMouseEnter(const GUI::Events::MouseEnterEvent &event) {
		//T::OnMouseEnter(event);
		//m_ItemInfo->HandleMouseEnter(event, m_Id);
	//}
	//virtual void OnMouseLeave(const GUI::Events::MouseLeaveEvent &event) {
		//T::OnMouseLeave(event);
		//m_ItemInfo->HandleMouseLeave(event, m_Id);
	//}
	//virtual void OnMouseMove(const Events::MouseMoveEvent &event);
	//virtual void OnMouseDown(const Events::MouseDownEvent &event);
	virtual void OnMouseUp(const GUI::Events::MouseUpEvent &event) override {
		m_ItemInfo->HandleMouseUp(event, m_Id);
	}
protected:
	MenuScene *m_OwnerScene;
	SharedMenuItemInfo m_ItemInfo;
	int m_Id;
};

using MenuLabel = MenuWidget < GUI::Widgets::Label > ;
using MenuImage = MenuWidget < GUI::Widgets::Image > ;

} //namespace MenuScene 
} //namespace Modules 
} //namespace MoonGlare 

#endif