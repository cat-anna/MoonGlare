/*
	Generated by cppsrc.sh
	On 2015-01-24 10:42:25,64
	by Paweu
*/

#pragma once
#ifndef iBassSound_H
#define iBassSound_H

namespace MoonGlare {
namespace Modules {
namespace BassSound {

using namespace ::MoonGlare::Sound; 

class iBassChannel : public iSound {
	GABI_DECLARE_ABSTRACT_CLASS(iBassChannel, iSound);
public:
 	iBassChannel();
 	virtual ~iBassChannel();

	static bool InitializeBass();
	static bool FinalizeBass();
	static bool ApplyGlobalConfig();

	virtual bool Initialize();
	virtual bool Finalize();

	virtual float Length() const;
	virtual bool IsPlaying() const;
	virtual void SetVolume(float value) const;

	virtual void Play();
	virtual void Stop();

	virtual void EnableEndNotification(bool value);
	virtual void AddEndActionNotification(SoundEndAction &action);
protected:
	struct VirtualSyncBase {
		unsigned long Handle;
		virtual ~VirtualSyncBase() { }
	};

	unsigned long m_Handle, m_EndSyncHandle;
	std::list<VirtualSyncBase*> m_SyncActions;

	void DecodeErrorCode(const char* function) const;
};

} //namespace BassSound 
} //namespace Modules 
} //namespace MoonGlare 
#endif
