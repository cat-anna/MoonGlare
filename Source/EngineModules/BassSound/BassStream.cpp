/*
	Generated by cppsrc.sh
	On 2015-01-24 10:42:43,61
	by Paweu
*/
#include <pch.h>
#include <MoonGlare.h>
#include <Engine/iSoundEngine.h>
#include "iBassChannel.h"
#include "BassInternal.h"
#include "BassStream.h"

namespace MoonGlare {
namespace Modules {
namespace BassSound {

GABI_IMPLEMENT_CLASS(BassStream);

BassStream::BassStream(DataModule *Owner):
		BaseClass(),
		m_file() {
}

BassStream::~BassStream() {
}

bool BassStream::Initialize() {
	if (!GetFileSystem()->OpenFile(GetFileName(), DataPath::Root, m_file)) {
		AddLogf(Error, "Unable to load stream '%s'", GetName().c_str());
		return false;
	}
	m_Handle = BASS_StreamCreateFile(true, m_file.get(), 0, m_file.size(), BASS_STREAM_PRESCAN);
	if (!m_Handle) {
		DecodeErrorCode(__FUNCTION__);
		return false;
	}
	return BaseClass::Initialize();
}

bool BassStream::Finalize() {
	if (!IsReady()) return true;
	BaseClass::Finalize();
	if (m_Handle) {
		if (!BASS_StreamFree(m_Handle))
			DecodeErrorCode(__FUNCTION__);
		m_Handle = 0;
	}
	m_file.reset();
	return true;
}

} //namespace BassSound 
} //namespace Modules 
} //namespace MoonGlare 
