/*
  * Generated by cppsrc.sh
  * On 2015-05-29 20:31:23,16
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include <pch.h>
#include <MoonGlare.h>
#include <Engine/DataClasses/iFont.h>
#include "FreeTypeHelper.h"
#include "TrueTypeWrapper.h"

//#include <Renderer/Commands/OpenGL/ControllCommands.h>
//#include <Renderer/Commands/OpenGL/ShaderCommands.h>
#include <Renderer/Commands/OpenGL/TextureCommands.h>
#include <Renderer/Commands/OpenGL/ArrayCommands.h>
#include <Renderer/RenderInput.h>

namespace MoonGlare {
namespace Modules {
namespace TrueTypeFont {

SPACERTTI_IMPLEMENT_STATIC_CLASS(TrueTypeWrapper);

TrueTypeWrapper::TrueTypeWrapper():
		BaseClass(),
		m_VAO() {
}

TrueTypeWrapper::~TrueTypeWrapper() {
}

//----------------------------------------------------------------
 
void TrueTypeWrapper::Render(Graphic::cRenderDevice &dev) {
	if (m_Chars.empty())
		return;

	m_VAO.Bind();
	uint32_t id = 0;
	dev.CurrentShader()->SetBackColor(m_Color);
	for (auto it : m_Chars) {
		if (!it->m_Ready)
			break;
		it->m_Texture.Bind();
		m_VAO.DrawElements(6, id * 6, 0, Graphic::Flags::fTriangles);
		++id;
	}
	m_VAO.UnBind();
}

void TrueTypeWrapper::RenderMesh(Graphic::cRenderDevice &dev) {
	//m_VAO.RenderMesh(m_Meshes);
}

void TrueTypeWrapper::GenerateCommands(Renderer::Commands::CommandQueue & Queue, uint16_t key) {
	if (m_Chars.empty())
		return;

	if (m_VAO.Handle() == 0)
		return;

	Renderer::RendererConf::CommandKey qkey{ key };

	Queue.PushCommand<Renderer::Commands::VAOBind>(qkey)->m_VAO = m_VAO.Handle();

	uint32_t id = 0;
	for (auto it : m_Chars) {
		if (!it->m_Ready)
			break;
		Queue.PushCommand<Renderer::Commands::Texture2DBind>(qkey)->m_Texture = it->m_Texture.Handle();
		auto arg = Queue.PushCommand<Renderer::Commands::VAODrawTrianglesBase>(qkey);
		arg->m_NumIndices = 6;
		arg->m_BaseIndex = (id * 6) * 4;
		arg->m_IndexValueType = GL_UNSIGNED_INT;
		++id;
	}
}

} //namespace TrueTypeFont 
} //namespace Modules 
} //namespace MoonGlare 
