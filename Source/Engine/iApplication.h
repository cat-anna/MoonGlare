/*
  * Generated by cppsrc.sh
  * On 2015-06-29 10:15:07.37
  * by Immethis
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef iApplication_H
#define iApplication_H

namespace MoonGlare {
namespace Application {

class iApplication : public cRootClass {
	SPACERTTI_DECLARE_CLASS_SINGLETON(iApplication, cRootClass);
	DECLARE_EXCACT_SCRIPT_CLASS_GETTER();
public:
 	iApplication();
 	virtual ~iApplication();

	virtual bool Initialize();
	virtual bool Execute();
	virtual bool Finalize();

	virtual bool PreSystemInit();
	virtual bool PostSystemInit();

	virtual void Exit();
	virtual void OnActivate();
	virtual void OnDeactivate();
	virtual const char* ExeName() const;

	union Flags {
		struct {
			bool m_Active : 1;
			bool m_Restart : 1;
		};
		uint32_t m_UintValue;
	};
	bool IsActive() const { return m_Flags.m_Active; }
	bool DoRestart() const { return m_Flags.m_Restart; }
	void SetRestart(bool v) { m_Flags.m_Restart = v; }

	static void RegisterScriptApi(ApiInitializer &api);
protected:
	Flags m_Flags;

	Asset::UniqueAssetManager m_AssetManager;
};

} //namespace Application 

inline Application::iApplication* GetApplication() { return Application::iApplication::Instance(); }

} //namespace MoonGlare 

#endif
