/*
  * Generated by cppsrc.sh
  * On 2015-06-29 10:15:07.37
  * by Immethis
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef iApplication_H
#define iApplication_H

namespace MoonGlare {
namespace Application {

class iApplication : public cRootClass {
	SPACERTTI_DECLARE_CLASS_SINGLETON(iApplication, cRootClass);
	DECLARE_EXCACT_SCRIPT_CLASS_GETTER();
public:
 	iApplication();
 	virtual ~iApplication();

	virtual bool Initialize() = 0;
	virtual bool Finalize() = 0;
	virtual void Exit();
	virtual void OnActivate();
	virtual void OnDeactivate();
	virtual const char* ExeName() const;

	enum class Flags {
		Inactive,
		DoRestart,
	};

	DefineFlagGetter(m_Flags, FlagBit(Flags::Inactive), Inactive);
	DefineFlag(m_Flags, FlagBit(Flags::DoRestart), DoRestart);

	static void RegisterScriptApi(ApiInitializer &api);
protected:
	unsigned m_Flags;
	DefineFlagSetter(m_Flags, FlagBit(Flags::Inactive), Inactive);
};

} //namespace Application 

inline Application::iApplication* GetApplication() { return Application::iApplication::Instance(); }

} //namespace MoonGlare 

#endif
