/*
	Generated by cppsrc.sh
	On 2015-01-19 22:21:25,72
	by Paweu
*/
#include <pch.h>
#include "../Graphic.h"

namespace Graphic {
namespace Dereferred {

SPACERTTI_IMPLEMENT_CLASS_NOCREATOR(SpotLightShader);
Shaders::ShaderClassRegister::Register<SpotLightShader> ShaderReg;
 
SpotLightShader::SpotLightShader(GLuint ShaderProgram, const string &ProgramName):
		BaseClass(ShaderProgram, ProgramName) {
	m_DirectionLocation					= Location("SpotLight.Direction");
	m_PositionLocation					= Location("SpotLight.Position");
	m_AttenuationLinearLocation			= Location("SpotLight.Atten.Linear");
	m_AttenuationExpLocation			= Location("SpotLight.Atten.Exp");
	m_AttenuationConstantLocation		= Location("SpotLight.Atten.Constant");
	m_AttenuationMinThresholdLocation	= Location("SpotLight.Atten.MinThreshold");	
	m_CutOffLocation					= Location("SpotLight.CutOff");
	m_ColorLocation						= Location("SpotLight.Base.Color");
	m_AmbientIntensityLocation			= Location("SpotLight.Base.AmbientIntensity");
	m_DiffuseIntensityLocation			= Location("SpotLight.Base.DiffuseIntensity");
	  
//bind default light parameters 
	Light::SpotLight pl; 
	Bind(pl);  
}       
      
SpotLightShader::~SpotLightShader() {
} 

} //namespace Dereferred 
} //namespace Graphic 
