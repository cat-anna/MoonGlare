/*
	Generated by cppsrc.sh
	On 2015-01-18  9:24:36,67
	by Paweu
*/

#pragma once
#ifndef DereferredFrameBuffer_H
#define DereferredFrameBuffer_H

namespace Graphic {
namespace Dereferred {

class DereferredFrameBuffer : public FrameBuffer {
public:
 	DereferredFrameBuffer();
 	~DereferredFrameBuffer();

	struct Buffers {
		enum {
			Position	= LightingPassShader::SamplerIndex::Position,
			Diffuse		= LightingPassShader::SamplerIndex::Diffuse,
			Normal		= LightingPassShader::SamplerIndex::Normal,
			MaxValue,
		};
	};

	void Free();
	bool Reset();

	void BeginFrame();

	void BeginGeometryPass();

	void BeginStencilPass();

	//void SetReadBuffer(unsigned b) {
		//glReadBuffer(GL_COLOR_ATTACHMENT0 + b);
	//}

	void BeginLightingPass();
	void BeginFinalPass();
private:
	GLuint m_Textures[Buffers::MaxValue];
	GLuint m_DepthTexture = 0;
    GLuint m_FinalTexture = 0;
};

} //namespace Dereferred 
} //namespace Graphic 

#endif

