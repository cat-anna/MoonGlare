/*
	Generated by cppsrc.sh
	On 2015-01-17 23:03:11,97
	by Paweu
*/
#include <pch.h>
#include "../Graphic.h"

namespace Graphic {
namespace Dereferred {

SPACERTTI_IMPLEMENT_CLASS_NOCREATOR(PointLightShader);
Shaders::ShaderClassRegister::Register<PointLightShader> ShaderReg;
 
PointLightShader::PointLightShader(GLuint ShaderProgram, const string &ProgramName):
		BaseClass(ShaderProgram, ProgramName) {
	m_PositionLocation					= Location("PointLight.Position");
	m_AttenuationLinearLocation			= Location("PointLight.Atten.Linear");
	m_AttenuationExpLocation			= Location("PointLight.Atten.Exp");
	m_AttenuationConstantLocation		= Location("PointLight.Atten.Constant");
	m_AttenuationMinThresholdLocation	= Location("PointLight.Atten.MinThreshold");
	m_ColorLocation						= Location("PointLight.Base.Color");
	m_AmbientIntensityLocation			= Location("PointLight.Base.AmbientIntensity");
	m_DiffuseIntensityLocation			= Location("PointLight.Base.DiffuseIntensity");
//bind default light parameters
	Light::PointLight pl;
	Bind(pl);
}  
   
PointLightShader::~PointLightShader() {
} 
 
} //namespace Dereferred 
} //namespace Graphic 
   