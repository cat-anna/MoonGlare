/*
  * Generated by cppsrc.sh
  * On 2015-08-14 12:45:23,12
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include <pch.h>
#include "Graphic.h"
#include "StaticFog.h"

namespace Graphic {

void StaticFog::Bind(Shader* shader, const StaticFog *instance) {
	if (!shader || !instance)
		return;

	glUniform1i(shader->Location("gStaticFog.Enabled"), instance->m_Enabled ? 1 : 0);
	if (!instance->m_Enabled)
		return;

	glUniform3fv(shader->Location("gStaticFog.Color"), 1, &instance->m_Color[0]);
	glUniform1f(shader->Location("gStaticFog.Start"), instance->m_Start);
	glUniform1f(shader->Location("gStaticFog.End"), instance->m_End);
	glUniform1f(shader->Location("gStaticFog.Density"), instance->m_Density);
}

bool StaticFog::LoadMeta(const xml_node node) {
	XML::Vector::Read(node, "Color", m_Color, math::vec3(0), XML::Captions::RGBA);

	m_Enabled = XML::Value::Read(node.attribute("Enabled"), false);

	auto Range = node.child("Range");
	m_Start = XML::Value::Read(Range.attribute("Start"), 0.0f);
	m_End = XML::Value::Read(Range.attribute("End"), 10.0f);

	auto density = node.child("Density");
	m_Density = XML::Value::Read(density.attribute("Value"), 10.0f);

	return true;
}

bool StaticFog::SaveMeta(xml_node node) const {
	//XML::Vector::w(node, "Color", m_Color, math::vec3(0), XML::Captions::RGBA);
	//XML::Value::Write(node.append_attribute("Enabled"), m_Enabled);

	//auto Range = node.append_child("Range");
	//XML::Value::Write(Range.append_attribute("Start"), m_Start);
	//XML::Value::Write(Range.append_attribute("End"), m_End);

	//auto density = node.append_child("Density");
	//XML::Value::Write(density.append_attribute("Value"), m_Density);
//	REQUIRE_REIMPLEMENT();
	return false;
}

} //namespace Graphic 

