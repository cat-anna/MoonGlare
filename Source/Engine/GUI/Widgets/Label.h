/*
  * Generated by cppsrc.sh
  * On 2015-03-01  6:54:44,27
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef Label_H
#define Label_H

namespace MoonGlare {
namespace GUI {
namespace Widgets {

class Label : public iWidget {
	SPACERTTI_DECLARE_STATIC_CLASS(Label, iWidget)
	DECLARE_EXCACT_SCRIPT_CLASS_GETTER();
public:
 	Label(iWidget *Parent);
 	virtual ~Label();

	void SetUtf8Text(const string& text);
	void SetText(const wstring& text);
	const wstring& GetText() const { return m_Text; }
	virtual void ScriptSet(Utils::Scripts::TableDispatcher &table) override;

	virtual void OnMouseEnter(const Events::MouseEnterEvent &event) override;
	virtual void OnMouseLeave(const Events::MouseLeaveEvent &event) override;
	virtual void OnMouseMove(const Events::MouseMoveEvent &event) override;
	virtual void OnMouseDown(const Events::MouseDownEvent &event) override;
	virtual void OnMouseUp(const Events::MouseUpEvent &event) override;

	void SetTextAlignMode(TextAlignMode mode);

	virtual void RecalculateMetrics() override;
	virtual void Draw(Graphic::MatrixStack &dev) override; 
	virtual void Process(const Core::MoveConfig &conf) override;

	static void RegisterScriptApi(ApiInitializer &api);
protected:
	void RefreshTextWrapper();

	wstring m_Text;
	DataClasses::FontInstance m_Wrapper;
	TextAlignMode m_TextAlignMode;
	Point m_TextPosition;
};

} //namespace Widgets 
} //namespace GUI 
} //namespace MoonGlare 

#endif
