/*
  * Generated by cppsrc.sh
  * On 2015-03-01 10:13:44,31
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef ImageBox_H
#define ImageBox_H

namespace MoonGlare {
namespace GUI {
namespace Widgets {

class Image : public iWidget {
	SPACERTTI_DECLARE_STATIC_CLASS(Image, iWidget)
	DECLARE_EXCACT_SCRIPT_CLASS_GETTER();
public:
 	Image(iWidget *Parent);
 	virtual ~Image();

	virtual void ScriptSet(Utils::Scripts::TableDispatcher &table);

	virtual void OnMouseEnter(const Events::MouseEnterEvent &event) override;
	virtual void OnMouseLeave(const Events::MouseLeaveEvent &event) override;
	virtual void OnMouseMove(const Events::MouseMoveEvent &event) override;
	virtual void OnMouseDown(const Events::MouseDownEvent &event) override;
	virtual void OnMouseUp(const Events::MouseUpEvent &event) override;

	virtual void RecalculateMetrics() override;
	virtual void Draw(Graphic::MatrixStack &dev) override; 
	virtual void Process(const Core::MoveConfig &conf);

	void SetImage(const string& Name);

	DefineDirectGetter(ImageAlignMode, InnerAlignMode);
	void SetImageAlignMode(InnerAlignMode value);
	DefineDirectGetter(Scale, float);
	void SetScale(float value);
	DefineDirectGetter(ScaleMode, ScaleMode);
	void SetScaleMode(ScaleMode value);

	static void RegisterScriptApi(ApiInitializer &api);
protected:
	string m_ImageName;
	AnimationInstance m_Animation;
	ScaleMode m_ScaleMode;
	Point m_EffectiveScale;
	Point m_ImagePosition;
	float m_Scale;
	InnerAlignMode m_ImageAlignMode;

	void ResetImage();
};

} //namespace Widgets 
} //namespace GUI 
} //namespace MoonGlare 

#endif

