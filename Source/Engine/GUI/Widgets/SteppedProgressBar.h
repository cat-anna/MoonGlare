/*
  * Generated by cppsrc.sh
  * On 2015-07-16 23:21:19,47
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef SteppedProgressBar_H
#define SteppedProgressBar_H

namespace MoonGlare {
namespace GUI {
namespace Widgets {

class SteppedProgressBar : public iWidget {
	GABI_DECLARE_STATIC_CLASS(SteppedProgressBar, iWidget)
	DECLARE_EXCACT_SCRIPT_CLASS_GETTER();
public:
 	SteppedProgressBar(iWidget *Parent);
 	virtual ~SteppedProgressBar();

	virtual void Draw(Graphic::MatrixStack &dev) override; 
	virtual void Process(const Core::MoveConfig &conf) override;
	virtual void RecalculateMetrics() override;

	virtual void ScriptSet(Utils::Scripts::TableDispatcher &table) override;

	DefineDirectGetterConst(UniformValue, float);
	void SetUniformValue(float f);
	DefineDirectGetterConst(Max, float);
	DefineDirectGetterConst(Min, float);
	float GetValue() const;
	void SetValue(float f);
	void SetRange(float min, float max);
	void SetStepsCount(unsigned Count);
	void SetStepImage(const string& Name);
	void SetInactiveColor(const Graphic::vec3 &color) { m_InactiveColor = color; }

	static void RegisterScriptApi(ApiInitializer &api);
protected:
	unsigned m_StepsCount;
	float m_UniformValue;
	float m_Min, m_Max;
	Graphic::vec3 m_InactiveColor;
	string m_StepImage;

	AnimationInstance m_StepAnimation;
	Graphic::vec2 m_StepSize;
	
	void ResetImage();
private: 
};

} //namespace Widgets 
} //namespace GUI 
} //namespace MoonGlare 

#endif
