/*
	Generated by cppsrc.sh
	On 2014-12-17 21:05:35,24
	by Paweu
*/

#pragma once
#ifndef EngineLoadScene_H
#define EngineLoadScene_H

namespace Core {
namespace Scene {

class EngineLoadScene : public DefaultLoadingScene {
	GABI_DECLARE_CLASS_NOCREATOR(EngineLoadScene, DefaultLoadingScene)
	//DECLARE_EXCACT_SCRIPT_CLASS_GETTER();
public:
	EngineLoadScene();
	virtual ~EngineLoadScene();

	virtual void BeginScene() override;
	virtual void EndScene() override;

	virtual int InvokeOnTimer(int TimerID) override;
	virtual int InvokeOnEscape() override;
	virtual int InvokeOnBeginScene() override;
	virtual int InvokeOnEndScene() override;
	virtual int InvokeOnInitialize() override;
	virtual int InvokeOnFinalize() override;
protected:
	virtual int InternalEventNotification(Events::InternalEvents event, int Param) override;
private:
	bool m_Aborted;
	std::thread m_LoadThread;
	void LoadMain();
};

} //namespace Scene 
} //namespace Core 

#endif // EngineLoadScene_H
