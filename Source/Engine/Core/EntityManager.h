/*
  * Generated by cppsrc.sh
  * On 2015-08-04 16:59:00,99
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef EntityManager_H
#define EntityManager_H

namespace MoonGlare {
namespace Core {

//struct Entity final : public Space::::BaseDoubleHandle32<unsigned, 16, 16> {
	//bool IsValid() const;
	//operator bool() const { return IsValid(); }
	//bool operator!() const { return !IsValid(); }
	//bool operator ==(const Entity &other) const { return m_IntegerValue == other.m_IntegerValue; }
//};

class EntityManager final 
	: public Config::Current::DebugMemoryInterface {
public:
	EntityManager();
	~EntityManager();

	bool Initialize();
	bool Finalize();

	Entity Allocate();
	void Release(Entity e);
	bool IsValid(Entity e);
private: 
};

} //namespace Core 
} //namespace MoonGlare 

#endif
