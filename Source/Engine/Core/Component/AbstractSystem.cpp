/*
  * Generated by cppsrc.sh
  * On 2015-08-19 22:57:41,79
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include <pch.h>
#include <nfMoonGlare.h>
#include "SubsystemManager.h"
#include "AbstractSystem.h"

namespace MoonGlare {
namespace Core {
namespace Component {

AbstractSystem::AbstractSystem(SubsystemManager * Owner)
		: m_Owner(Owner) {
	m_HandleTable = Owner->GetWorld()->GetHandleTable();
}

AbstractSystem::~AbstractSystem() {
}

bool AbstractSystem::PushEntryToLua(Handle h, lua_State *lua, int &luarets) {
	return false;
}

bool AbstractSystem::Create(Entity Owner, Handle &hout) {
	AddLogf(Error, "Abstract function called! class: %s", typeid(*this).name());
	return false;
}

bool AbstractSystem::LoadComponentConfiguration(pugi::xml_node node) {
	return true;
}

} //namespace Component 
} //namespace Core 
} //namespace MoonGlare 
