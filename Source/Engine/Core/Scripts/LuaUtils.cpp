/*
  * Generated by cppsrc.sh
  * On 
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include <pch.h>
#include <nfMoonGlare.h>
#include "LuaUtils.h"

namespace MoonGlare {
namespace Core {
namespace Scripts {

void LuaTraceback(lua_State *L) {
#ifdef DEBUG
	lua_getfield(L, LUA_GLOBALSINDEX, "debug");
	if (lua_isnil(L, -1)) {
		return;
	}
	lua_getfield(L, -1, "traceback");
	if (lua_isnil(L, -1)) {
		return;
	}
	lua_pushvalue(L, 1);
	lua_pushinteger(L, 2);
	lua_call(L, 2, 1);

	const char *cs = lua_tostring(L, 1);
	AddLogf(Error, "Lua callstack:\n%s", cs);
	lua_pop(L, 2);
#endif
}

int LuaPanic(lua_State *L) {
	const char *m = lua_tostring(L, 1);
	AddLogf(Error, "Lua panic! message: %s", m);
	LuaTraceback(L);
	if (!m)
		throw eLuaPanic("NO MESSAGE");
	throw eLuaPanic(m);
}


void LogScriptApi(ApiInitializer &api) {
	api
#ifdef DEBUG_SCRIPTAPI
		.addCFunction("panic", LuaPanic)
#endif
		;
}

RegisterApiNonClass(LogScriptApi, &LogScriptApi, nullptr);

} //namespace Scripts 
} //namespace Core 
} //namespace MoonGlare 
