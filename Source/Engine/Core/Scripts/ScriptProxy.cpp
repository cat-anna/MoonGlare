/*
  * Generated by cppsrc.sh
  * On 2015-03-24 17:52:31,03
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include <pch.h>
#include <MoonGlare.h>
#include "ScriptProxy.h"

namespace Core {
namespace Scripts {

using ::OrbitLogger::ThreadInfo;

__declspec(thread) ScriptProxy *ScriptProxy::_Instance = nullptr;
SPACERTTI_IMPLEMENT_STATIC_CLASS(ScriptProxy);

ScriptProxy::ScriptProxy():
		BaseClass(),
		m_Script() {
	if (_Instance) {
		AddLog(Error, "Thread already has script proxy set!");
		return;
	}
	memset(m_ThreadSignature, 0, sizeof(m_ThreadSignature));
	*((ThreadInfo::Signature*)m_ThreadSignature) = ThreadInfo::GetSignature();
	m_IsMainContext = ThreadInfo::IsMain();
	_Instance = this;
	AddLog(Debug, "Thread initialized script proxy instance!");
}

ScriptProxy::~ScriptProxy() {
	if (_Instance && _Instance != this)
		return;
	_Instance = nullptr;
	if (m_Script) 
		GetScriptEngine()->FinalizeScriptProxy(*this, m_Script);
	AddLog(Debug, "Thread finalized script proxy instance!");
}

//---------------------------------------------------------------------------------------

bool ScriptProxy::RunTimeInitialze() {
	return GetScriptEngine()->InitializeScriptProxy(*this, m_Script);
}

} //namespace Scripts 
} //namespace Core 
