/*
  * Generated by cppsrc.sh
  * On 2016-10-20 21:42:33,06
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once

#include "RendererConfiguration.h"

namespace MoonGlare::Renderer {

class CommandQueueTable {
	struct Conf {
		using CommandQueueID = ::MoonGlare::Configuration::Renderer::CommandQueueID;
	};
public:
	CommandQueueTable() {};
	~CommandQueueTable() {};

	enum {
		SIZE = static_cast<size_t>(Conf::CommandQueueID::MaxValue),
	};

	void Sort() {
		for (auto &it : m_CommandQueues)
			it.Sort();
	}
	void Execute() {
		for (auto &it : m_CommandQueues)
			it.Execute();
	}
	void ClearAllocation() {
		for (auto &it : m_CommandQueues)
			it.ClearAllocation();
	}
	void MemZero() {
		for (auto &it : m_CommandQueues)
			it.MemZero();
	}

	template<RendererConf::CommandQueueID QID>
	Commands::CommandQueue& Get() { return m_CommandQueues[static_cast<size_t>(QID)]; }
	Commands::CommandQueue& operator[](Conf::CommandQueueID QID) { return m_CommandQueues[static_cast<size_t>(QID)]; }
private: 
	std::array<Commands::CommandQueue, SIZE> m_CommandQueues;
};

} //namespace MoonGlare::Renderer
