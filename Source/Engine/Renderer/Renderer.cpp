/*
* Generated by cppsrc.sh
* On 2015-10-25 21:28:37,58
* by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include <pch.h>
#include "nRenderer.h"

namespace MoonGlare {
namespace Renderer {

GABI_IMPLEMENT_CLASS_SINGLETON(Renderer);

Renderer::Renderer(): 
		m_Resources(this) {
	SetThisAsInstance();

	m_Frame = &m_FrameBuffers.m_First;
	m_SubmittedFrame = &m_FrameBuffers.m_Second;
}

Renderer::~Renderer() {
}

//----------------------------------------------------------------------------------

bool Renderer::Initialize() {
	if (!m_Resources.Initialize()) {
		AddLog(Error, "Failed to initialize resources!");
		return false;
	}
	if (!m_Tasks.Initialize()) {
		AddLog(Error, "Failed to initialize tasks!");
		return false;
	}

	AddLog(Debug, "Renderer Initialized");
	return true;
}

bool Renderer::Finalize() {
	if (!m_Tasks.Finalize()) {
		AddLog(Error, "Failed to finalize tasks!");
	}
	if (!m_Resources.Finalize()) {
		AddLog(Error, "Failed to finalize resources!");
	}
	AddLog(Debug, "Renderer finalized");
	return true;
}

//----------------------------------------------------------------------------------

void Renderer::SubmitFrame() {
	std::swap(m_Frame, m_SubmittedFrame);

	m_SubmittedFrame->Submit();
}

} //namespace Renderer 
} //namespace MoonGlare 
