/*
  * Generated by cppsrc.sh
  * On 2016-05-03 21:31:13,10
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef World_H
#define World_H

#include "Core/EntityManager.h"
#include "Core/HandleTable.h"

namespace MoonGlare {

class World {
public:
 	World();
 	~World();

	bool Initialize(::Core::cScriptEngine *se);
	bool Finalize();

	Core::EntityManager* GetEntityManager() { return &m_EntityManager; }
	Core::HandleTable* GetHandleTable() { return &m_HandleTable; }
	Core::InputProcessor* GetInputProcessor() { return m_InputProcessor.get(); }

	::Core::cScriptEngine *GetScriptEngine() { return m_ScriptEngine; };
private: 
	std::unique_ptr<Core::InputProcessor> m_InputProcessor;

	::Core::cScriptEngine *m_ScriptEngine;

	Core::HandleTable m_HandleTable;
	Core::EntityManager m_EntityManager;
};

} //namespace MoonGlare 

#endif
