/*
  * Generated by cppsrc.sh
  * On 2015-08-22  9:29:51,31
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#if !defined(DebugInterface_H) && defined(DEBUG_INTERFACE)
#define DebugInterface_H

namespace Config {
namespace Debug {

#ifdef DEBUG_MEMORY

struct MemoryInterface {

	struct Info {
		uint32_t Allocated;
		uint32_t MaxAllocated;
		uint32_t ElementSize;
		uint32_t Capacity;
		const char *Name;

		void Update(uint32_t allocated) {
			Allocated = allocated;
			if (MaxAllocated < allocated)
				MaxAllocated = allocated;
		}
	};

	MemoryInterface();
	~MemoryInterface();
	virtual Info* GetInfo() const = 0;

	static const std::list<MemoryInterface*>& GetInterfaces() { return s_Interfaces; }
private:
	static std::list<MemoryInterface*> s_Interfaces;
};
#endif

} //namespace Debug 
} //namespace Config 

#endif

#ifndef DEBUG_INTERFACE
#ifdef DEBUG_MEMORY
#error DEBUG_MEMORY cannot be defined without DEBUG_INTERFACE
#endif
#endif
