/*
  * Generated by cppsrc.sh
  * On 2017-02-04 20:56:37,48
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/
#include "AssetManager.h"

#include "FileSystem.h"
#include "Shader/Loader.h"
#include "Texture/TextureLoader.h"

#include <AssetSettings.x2c.h>

namespace MoonGlare::Asset {

AssetManager::AssetManager() {
    m_FileSystem = std::make_unique<FileSystem>();
    m_ShaderLoader = std::make_unique<Shader::Loader>(m_FileSystem.get());
    m_TextureLoader = std::make_unique<Texture::Loader>(m_FileSystem.get());
}

AssetManager::~AssetManager() {
}

bool AssetManager::Initialize(const x2c::Settings::AssetSettings_t *Configuration) {
    AssetsAssert(Configuration);
    m_Configuration = Configuration;

    m_FileSystem->Initialize();
    m_ShaderLoader->Initialize();
    m_TextureLoader->Initialize();

    return true;
}

bool AssetManager::Finalize() {
    m_TextureLoader->Finalize();
    m_ShaderLoader->Finalize();
    m_FileSystem->Finalize();

    return true;
}

ShaderCodeLoader* AssetManager::GetShaderCodeLoader() const {
    return m_ShaderLoader.get(); 
}

TextureLoader * AssetManager::GetTextureLoader() const {
    return m_TextureLoader.get();
}

} //namespace MoonGlare::Asset
