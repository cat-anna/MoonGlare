/*
  * Generated by cppsrc.sh
  * On 2017-02-04 20:57:16,59
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef Loader_H
#define Loader_H

namespace MoonGlare::Asset::Shader {

enum class ShaderType : uint8_t {
	Geometry,
	Vertex,
	Fragment,

	MaxValue,
};

struct ShaderCode {
	std::array<std::string, static_cast<size_t>(ShaderType::MaxValue)> m_Code;
};

class Loader final {
public:
 	Loader(FileSystem *fs);
 	~Loader();

	bool Initialize();
	bool Finalize();

	bool LoadCode(const std::string &Name, ShaderCode &Output);
protected:
	FileSystem* GetFileSystem() { return m_FileSystem; }
private: 
	FileSystem *m_FileSystem;
};

} //namespace MoonGlare::Asset::Shader 

#endif
