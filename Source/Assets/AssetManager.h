/*
  * Generated by cppsrc.sh
  * On 2017-02-04 20:56:37,48
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/

#pragma once

#include <Source/Renderer/Resources/AssetLoaderInterface.h>

namespace MoonGlare::x2c::Settings {
	struct AssetSettings_t;
}

namespace MoonGlare::Asset {

namespace Shader {
	class Loader;
}

class FileSystem;

class AssetManager final : public Renderer::Resources::AssetLoader {
public:
 	AssetManager();
 	~AssetManager();

	bool Initialize(const x2c::Settings::AssetSettings_t &Configuration);
	bool Finalize();

	Shader::Loader* GetShaderLoader() { return m_ShaderLoader.get(); }
	virtual Renderer::Resources::ShaderCodeLoader* GetShaderCodeLoader() const override;
private:
	std::unique_ptr<FileSystem> m_FileSystem;
	std::unique_ptr<Shader::Loader> m_ShaderLoader;
};

} //namespace MoonGlare::Asset 

