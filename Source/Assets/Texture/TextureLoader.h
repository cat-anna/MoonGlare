/*
  * Generated by cppsrc.sh
  * On 2017-02-04 20:57:16,59
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/

#pragma once

#include <Source/Renderer/Resources/AssetLoaderInterface.h>

namespace MoonGlare::Asset::Texture {

class Loader final : public Renderer::Resources::TextureLoader {
public:
 	Loader(FileSystem *fs);
 	~Loader();

	void Initialize();
	void Finalize();

	bool LoadTextureMemory(const void* ImgData, unsigned ImgLen, TexturePixelData &out);
	bool LoadTextureURI(const std::string &URI, TexturePixelData &out);

	virtual bool LoadTexture(const std::string &fpath, TexturePixelData &out) override;
protected:
	FileSystem* GetFileSystem() { return m_FileSystem; }
private: 
	FileSystem *m_FileSystem;
};

} //namespace MoonGlare::Asset::Texture 
