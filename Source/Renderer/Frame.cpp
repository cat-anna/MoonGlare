/*
  * Generated by cppsrc.sh
  * On 2017-02-10 15:35:25,52
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/

#include "nfRenderer.h"
#include "Frame.h"

#include "TextureRenderTask.h"

namespace MoonGlare::Renderer {

bool Frame::Initialize(uint8_t BufferIndex, RenderDevice *device, Resources::ResourceManager *ResMgr) {
	RendererAssert(BufferIndex < Configuration::FrameBuffer::Count);
	RendererAssert(device);
	RendererAssert(ResMgr);
	
	m_BufferIndex = BufferIndex;
	m_RenderDevice = device;
	m_ResourceManager = ResMgr;

	m_QueuedTextureRender.ClearAllocation();
	m_CommandLayers.Clear();
	m_Memory.Clear();
	
	return true;
}

bool Frame::Finalize() {
	return true;
}

//----------------------------------------------------------------------------------

void Frame::BeginFrame() {
	m_QueuedTextureRender.ClearAllocation();
	m_CommandLayers.ClearAllocation();
	m_Memory.Clear();
}

void Frame::EndFrame() {
}

//----------------------------------------------------------------------------------
 
bool Frame::Submit(TextureRenderTask *trt) {
	m_CommandLayers.Get<Conf::Layers::PreRender>().MakeCommand<Commands::ExecuteQueue>(&trt->GetCommandQueue());
	return m_QueuedTextureRender.push(trt);
}

//----------------------------------------------------------------------------------

} //namespace MoonGlare::Renderer 
