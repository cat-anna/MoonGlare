/*
  * Generated by cppsrc.sh
  * On 2017-02-09 21:34:50,23
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/

#include "nfRenderer.h"
#include "Renderer.h"

#include "RenderDevice.h"
#include "Frame.h"
#include "Context.h"

namespace MoonGlare::Renderer {

RendererFacade::RendererFacade() {
}

RendererFacade::~RendererFacade() {
}

//----------------------------------------------------------------------------------

bool RendererFacade::Initialize(const ContextCreationInfo& ctxifo) {
	if (!Context::InitializeSubSystem()) {
		AddLogf(Error, "Context subsystem initialization failed!");
		return false;
	}

	m_Context = mem::make_aligned<Context>();
	if (!m_Context->Initialize(ctxifo, this, m_Device.get())) {
		AddLogf(Error, "Context initialization failed!");
		return false;
	}

	m_ResourceManager = mem::make_aligned<Resources::ResourceManager>();

	m_Device = mem::make_aligned<RenderDevice>();
    if(!m_Device->Initialize(this)) {
        AddLogf(Error, "Render device initialization failed!");
        return false;
    }

    return true;
}

bool RendererFacade::Finalize() {
    if(m_Device && !m_Device->Finalize()) {
        AddLogf(Error, "Render device finalization failed!");
    }
    m_Device.reset();

	if (m_Context && !m_Context->Finalize()) {
		AddLogf(Error, "Context finalization failed!");
	}
	m_Context.reset();

	if (!Context::FinalizeSubSystem()) {
		AddLogf(Error, "Context subsystem finalization failed!");
	}

    return true;
}

//----------------------------------------------------------------------------------

void RendererFacade::Start() {
    m_CanWork = true;

}

void RendererFacade::Stop() {
    m_CanWork = false;
}

//----------------------------------------------------------------------------------

} //namespace MoonGlare::Renderer
