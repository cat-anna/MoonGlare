/*
  * Generated by cppsrc.sh
  * On 2017-02-09 21:46:28,36
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/

#include "nfRenderer.h"
#include "RenderDevice.h"
#include "Frame.h"

#include "Device/ErrorHandler.h"
#include "Device/DeviceInfo.h"

namespace MoonGlare::Renderer {

RenderDevice::RenderDevice() {
}

RenderDevice::~RenderDevice() {
}

bool RenderDevice::Initialize(RendererFacade *renderer) {
	
	CriticalCheck(glewInit() == GLEW_OK, "Unable to initialize GLEW!");
	AddLog(Debug, "GLEW initialized");
	AddLog(System, "GLEW version: " << (char*) glewGetString(GLEW_VERSION));

	//	for (auto &buffer : m_Frames) {
	//		buffer = std::make_unique<Frame>();
	//		if (!buffer->Initialize(this, m_Device.get())) {
	//			AddLogf(Error, "Frame buffer initialization failed!");
	//			return false;
	//		}
	//	}

	Device::ErrorHandler::RegisterErrorCallback();
	Device::DeviceInfo::ReadInfo();

	return true;
}

bool RenderDevice::Finalize() {

	//	for (auto &buffer : m_Frames) {
	//		if (!buffer->Finalize()) {
	//			AddLogf(Error, "Frame buffer finalization failed!");
	//		}
	//		buffer.reset();
	//	}

	return true;
}

//----------------------------------------------------------------------------------

} //namespace MoonGlare::Renderer
