/*
  * Generated by cppsrc.sh
  * On 2017-02-09 21:34:50,23
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/
#pragma once

#include "Configuration.Renderer.h"
#include "FrameBuffer.h"

namespace MoonGlare::Renderer {

class RendererFacade final {
public:
	RendererFacade();
 	~RendererFacade();

    bool Initialize();
    bool Finalize();

    /** Shall work on main thread; does not return until stopped */
    void Start();
    void Stop();
	
	void Step();

	Frame* NextFrame();
	void Submit(Frame *frame);
private:
	std::atomic<Frame*> m_NextFrame;
    bool m_CanWork = false;

    std::array<std::unique_ptr<Frame>, Configuration::FramesCount> m_Frames;
    std::unique_ptr<RenderDevice> m_Device;
};

} //namespace MoonGlare::Renderer
