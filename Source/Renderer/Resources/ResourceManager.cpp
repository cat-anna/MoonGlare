/*
  * Generated by cppsrc.sh
  * On 2017-02-13 22:45:58,54
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/

#include "ResourceManager.h"

namespace MoonGlare::Renderer::Resources {

bool ResourceManager::Initialize(RendererFacade *Renderer, AssetLoader* Assets) {
	RendererAssert(Renderer);
	RendererAssert(Assets);

	m_RendererFacade = Renderer;
	m_AssetLoader = Assets;

	if (!m_TextureResource.Initialize(this)) {
		AddLogf(Error, "TextureResource initialization failed!");
		return true;
	}

	if (!m_VAOResource.Initialize(this)) {
		AddLogf(Error, "VAOResource initialization failed!");
		return true;
	}

	if (!m_ShaderResource.Initialize(this, m_AssetLoader->GetShaderCodeLoader())) {
		AddLogf(Error, "ShaderResource initialization failed!");
		return true;
	}

	return true;
}

bool ResourceManager::Finalize() {
	if (!m_ShaderResource.Finalize()) {
		AddLogf(Error, "ShaderResource finalization failed!");
	}

	if (!m_VAOResource.Finalize()) {
		AddLogf(Error, "VAOResource finalization failed!");
	}

	if (!m_TextureResource.Finalize()) {
		AddLogf(Error, "TextureResource finalization failed!");
	}

	return true;
}

} //namespace MoonGlare::Renderer::Resources 

