/*
Generated by cppsrc.sh
On 2015-01-18  9:02:18,36
by Paweu
*/

#pragma once

#include "../Commands/OpenGL/TextureCommands.h"

namespace MoonGlare::Renderer {

struct alignas(16) PlaneShadowMap {
    using Conf = Configuration::Shadow;

    Device::TextureHandle textureHandle;
    Device::FramebufferHandle framebufferHandle;

    uint16_t size;
    bool valid;
    uint8_t _padding1;
    uint32_t _padding2;

    void Init(Commands::CommandQueue &q) {
         auto *cmd = q.PushCommand<Commands::InitPlaneShadowMap>();
         cmd->size = static_cast<GLsizei>(size);
         cmd->bufferHandle = &framebufferHandle;
         cmd->textureHandle = &textureHandle;
         valid = true;
    }
};
//static_assert((sizeof(PlaneShadowMap) % 16) == 0, "Invalid size!");

}
