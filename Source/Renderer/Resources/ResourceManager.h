/*
  * Generated by cppsrc.sh
  * On 2017-02-13 22:45:58,54
  * by Kalessin
*/
/*--END OF HEADER BLOCK--*/

#pragma once

#include "TextureResource.h"
#include "VAOResource.h"

namespace MoonGlare::Renderer::Resources {

class alignas(16) ResourceManager final {
public:
	bool Initialize(RendererFacade *Renderer);
	bool Finalize();

	TextureResource& GetTextureAllocator() {
		RendererAssert(this); 
		return m_TextureResource;
	}
	VAOResource& GetVAOResource() {
		RendererAssert(this);
		return m_VAOResource;
	}
private: 
	RendererFacade *m_RendererFacade = nullptr;
	void* padding[3];
	TextureResource m_TextureResource;
	VAOResource m_VAOResource;
};

static_assert((sizeof(ResourceManager) % 16) == 0, "Invalid size!");

} //namespace MoonGlare::Renderer::Resources 
