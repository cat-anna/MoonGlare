/*
  * Generated by cppsrc.sh
  * On 2016-09-24  9:36:39,23
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once

#include "Structure.h"

Q_DECLARE_METATYPE(MoonGlare::TypeEditor::StructureValue*)

namespace MoonGlare {
namespace TypeEditor {

class CustomTypeEditor {
public:
	virtual ~CustomTypeEditor() {}
	virtual void SetValue(const std::string &in) = 0;
	virtual std::string GetValue() = 0;
	virtual QWidget *GetWidget() { return dynamic_cast<QWidget*>(this); }
};

class TypeEditorInfo {
public:
	virtual ~TypeEditorInfo() {}
	virtual CustomTypeEditor* CreateEditor(QWidget *Parent) const = 0;
	virtual std::string ToDisplayText(const std::string &in) const = 0;

	static void RegisterTypeEditor(std::shared_ptr<const TypeEditorInfo> typeinfo, const std::string &Name);
	static std::shared_ptr<const TypeEditorInfo> GetEditor(const std::string &Name);
};

template<class EDITOR>
struct TemplateTypeEditorInfo : public TypeEditorInfo {
	virtual CustomTypeEditor* CreateEditor(QWidget *Parent) const override {
		return new EDITOR(Parent);
	};
	virtual std::string ToDisplayText(const std::string &in) const override {
		return EDITOR::ToDisplayText(in);
	}
};

} //namespace TypeEditor
} //namespace MoonGlare

