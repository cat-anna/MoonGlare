/*
  * Generated by cppsrc.sh
  * On 2016-09-24  9:36:31,89
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include PCH_HEADER
#include "Structure.h"

namespace MoonGlare {
namespace TypeEditor {

std::unordered_map<std::string, SharedStructureInfo> *gStructInfoMap = nullptr;

void Structure::RegisterStructureInfo(SharedStructureInfo typeinfo) {
	if (!gStructInfoMap)
		gStructInfoMap = new std::unordered_map<std::string, SharedStructureInfo>();
	(*gStructInfoMap)[typeinfo->m_Name].swap(typeinfo);
}

SharedStructureInfo Structure::GetStructureInfo(const std::string & Name) {
	if (!gStructInfoMap)
		return nullptr;
	auto it = gStructInfoMap->find(Name);
	if (it == gStructInfoMap->end())
		return nullptr;
	return it->second;
}

} //namespace TypeEditor 
} //namespace MoonGlare 

