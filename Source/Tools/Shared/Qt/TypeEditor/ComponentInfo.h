/*
* Generated by cppsrc.sh
* On 2016-09-24  9:36:31,89
* by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef ComponentInfo_H
#define ComponentInfo_H

#include <Source/Engine/Core/Component/nfComponent.h>
#include "Structure.h"

namespace MoonGlare {
namespace TypeEditor {

struct ComponentInfo;
using SharedComponentInfo = std::shared_ptr<const ComponentInfo>;

struct ComponentInfo {
	MoonGlare::Core::ComponentID m_CID;
	std::string m_Name;
	std::string m_DisplayName;
	std::vector<MoonGlare::Core::ComponentID> m_Requirements;
	SharedStructureInfo m_EntryStructure;
	SharedStructureInfo m_SettingsStructure;

	using CIDMapType = std::unordered_map < MoonGlare::Core::ComponentID, SharedComponentInfo>;
	using NameMapType = std::unordered_map < std::string, SharedComponentInfo>;

	static void RegisterComponentInfo(SharedComponentInfo typeinfo);
	static SharedComponentInfo GetComponentInfo(const std::string &Name);
	static SharedComponentInfo GetComponentInfo(MoonGlare::Core::ComponentID CID);
	static const NameMapType& GetComponents();
};

} //namespace TypeEditor 
} //namespace MoonGlare 

#endif
