/*
  * Generated by cppsrc.sh
  * On 2016-09-11 17:09:28,63
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef iEditor_H
#define iEditor_H

namespace MoonGlare {
namespace QtShared {

struct EditableFieleInfo {
	std::string m_Ext;
	std::string m_Icon;
};

struct FileCreationMethodInfo {
	std::string m_Ext;
	std::string m_Icon;
	std::string m_Caption;
	std::string m_MethodID;
};

struct iEditorInfo {
	virtual std::vector<EditableFieleInfo> GetSupportedFileTypes() const { return{}; }
	virtual std::vector<FileCreationMethodInfo> GetCreateFileMethods() const { return{}; }
protected:
	virtual ~iEditorInfo() {};
};

struct iEditor {
	virtual bool Create(const std::string &LocationURI,const FileCreationMethodInfo& what) { return false; }
	virtual bool OpenData(const std::string &URI) { return false; }
	virtual bool SaveData() { return false; }
	virtual bool TryCloseData() { return false; }
protected:
	virtual ~iEditor() {};
};

} //namespace QtShared
} //namespace MoonGlare

#endif
