/*
  * Generated by cppsrc.sh
  * On 2016-10-09 21:37:20,45
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef AsyncFileProcessor_H
#define AsyncFileProcessor_H

#include <iFileProcessor.h>

namespace MoonGlare {
namespace Editor {

class AsyncFileProcessor 
	: public QObject {
	Q_OBJECT;
public:
 	AsyncFileProcessor();
 	virtual ~AsyncFileProcessor();
signals:
	void FileProcessingFinished(QtShared::SharedFileProcessor);
public slots:
	void FileProcessorCreated(QtShared::SharedFileProcessor);
protected:
	bool m_ThreadCanWork;
	std::condition_variable m_QueueEmpty;
	std::list<QtShared::SharedFileProcessor> m_Queue;
	std::mutex m_Mutex;
	std::thread m_Thread;

	void ThreadEntry();
protected slots:
	void JobFinished(QtShared::SharedFileProcessor);
};

} //namespace Editor 
} //namespace MoonGlare 

#endif
