/*
* Generated by cppsrc.sh
* On 2016-09-24  9:36:31,89
* by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef ComponentInfo_H
#define ComponentInfo_H

#include <Source/Engine/Core/Component/nfComponent.h>
#include "Structure.h"

namespace MoonGlare {
namespace TypeEditor {

struct ComponentInfo;
using SharedComponentInfo = std::shared_ptr<const ComponentInfo>;

struct ComponentInfo {
	std::string m_Name;
	std::string m_DisplayName;
	SharedStructureInfo m_EntryStructure;

	using CIDMapType = std::unordered_map < MoonGlare::Core::SubSystemId, SharedComponentInfo>;
	using NameMapType = std::unordered_map < std::string, SharedComponentInfo>;

	static void RegisterComponentInfo(SharedComponentInfo typeinfo);
	static SharedComponentInfo GetComponentInfo(const std::string &Name);
	static const NameMapType& GetComponents();
};

struct SystemInfo;
using SharedSystemInfo = std::shared_ptr<const SystemInfo>;

struct SystemInfo {
    std::string m_Name;
    std::string m_DisplayName;
    SharedStructureInfo m_SettingsStructure;

    static void RegisterSystemInfo(SharedSystemInfo typeinfo);
    using NameMapType = std::unordered_map<std::string, SharedSystemInfo>;
    static SharedSystemInfo GetSystemInfo(const std::string &Name);
    static const NameMapType& GetSystems();
};

} //namespace TypeEditor 
} //namespace MoonGlare 

#endif
