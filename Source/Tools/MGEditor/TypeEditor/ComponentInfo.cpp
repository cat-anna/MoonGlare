/*
* Generated by cppsrc.sh
* On 2016-09-24  9:36:31,89
* by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include PCH_HEADER
#include "ComponentInfo.h"

namespace MoonGlare {
namespace TypeEditor {

static ComponentInfo::NameMapType *gNameMap = nullptr;
static ComponentInfo::CIDMapType *gCidMap = nullptr;

void ComponentInfo::RegisterComponentInfo(SharedComponentInfo typeinfo) {
	if (!gNameMap)
		gNameMap = new NameMapType();
	if (!gCidMap)
		gCidMap = new CIDMapType();

	(*gCidMap)[typeinfo->m_CID] = typeinfo;
	(*gNameMap)[typeinfo->m_Name] = typeinfo;
}

SharedComponentInfo ComponentInfo::GetComponentInfo(const std::string & Name) {
	if (!gNameMap)
		return nullptr;
	auto it = gNameMap->find(Name);
	if (it == gNameMap->end())
		return nullptr;
	return it->second;
}

SharedComponentInfo ComponentInfo::GetComponentInfo(MoonGlare::Core::ComponentId CID) {
	if (!gCidMap)
		return nullptr;
	auto it = gCidMap->find(CID);
	if (it == gCidMap->end())
		return nullptr;
	return it->second;
}

const ComponentInfo::NameMapType& ComponentInfo::GetComponents() {
	if (!gNameMap)
		gNameMap = new NameMapType();
	return *gNameMap;
}

} //namespace TypeEditor 
} //namespace MoonGlare 

