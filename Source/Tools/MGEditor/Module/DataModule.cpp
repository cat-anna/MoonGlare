/*
  * Generated by cppsrc.sh
  * On 2016-07-21 20:17:41,09
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#include PCH_HEADER
#include <qobject.h>
#include "DataModule.h"

namespace MoonGlare {
namespace Editor {
namespace Module {

std::shared_ptr<DataModule> DataModule::NewModule(const std::string & MasterFile) {
	auto ptr = std::make_shared<DataModule>(MasterFile);
	if (!ptr->Create())
		return nullptr;
	return ptr;
}

std::shared_ptr<DataModule> DataModule::OpenModule(const std::string & MasterFile) {
	auto ptr = std::make_shared<DataModule>(MasterFile);
	if (!ptr->Open())
		return nullptr;
	return ptr;
}

DataModule::DataModule(const std::string & MasterFile)
	: m_MasterFile(MasterFile) {
	m_Project.ResetToDefault();
}

DataModule::~DataModule() {
}

std::string DataModule::GetBaseDirectory() {
	boost::filesystem::path p(m_MasterFile);

	return p.parent_path().string();
}

bool DataModule::Create() {
	SetChanged();
	return true;
}

bool DataModule::Open() {
	return m_Project.ReadFile(m_MasterFile);
}

bool DataModule::DoPeriodicSave() {
	return m_Project.WriteFile(m_MasterFile);
}

} //namespace Module 
} //namespace Editor 
} //namespace MoonGlare 
