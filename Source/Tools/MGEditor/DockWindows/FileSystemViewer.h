/*
  * Generated by cppsrc.sh
  * On 2016-07-22  0:08:40,44
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef FileSystemViewer_H
#define FileSystemViewer_H

#include <DockWindow.h>
#include "../Notifications.h"
#include "../FileSystem.h"

namespace Ui { class FilesystemViewer; }

namespace MoonGlare {
namespace Editor {
namespace DockWindows {

struct FileSystemViewerRole {
	enum {
		FileURI = Qt::UserRole + 1,
		FileHash,
		FileFullName,
	};
};

class FileSystemViewer 
	: public QtShared::DockWindow {
	Q_OBJECT;
public:
 	FileSystemViewer(QWidget *parent = nullptr);
 	virtual ~FileSystemViewer();

	virtual bool DoSaveSettings(pugi::xml_node node) const override;
	virtual bool DoLoadSettings(const pugi::xml_node node) override;
protected:
	void Clear();
	void RefreshTreeView();
protected slots:
	void ShowContextMenu(const QPoint &);
	void ItemDoubleClicked(const QModelIndex&);
	void RefreshFilesystem();
	void ProjectChanged(Module::SharedDataModule datamod);
	void OpenItem();
private: 
	std::unique_ptr<Ui::FilesystemViewer> m_Ui;
	std::unique_ptr<QStandardItemModel> m_ViewModel;
	std::unordered_map<StarVFS::FileID, QStandardItem *> m_VFSItemMap;
	Module::SharedDataModule m_Module;
	SharedFileSystem m_FileSystem;
};

} //namespace DockWindows 
} //namespace Editor 
} //namespace MoonGlare 

#endif
