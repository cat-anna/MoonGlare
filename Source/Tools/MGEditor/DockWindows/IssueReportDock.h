/*
  * Generated by cppsrc.sh
  * On 2016-07-22  0:08:40,44
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once

#include <DockWindow.h>
#include "../iIssueReporter.h"

namespace Ui { class IssueReportDock; }

namespace MoonGlare {
namespace Editor {
namespace DockWindows {

class IssueReport
    : public QtShared::DockWindow {
    Q_OBJECT;
public:
    IssueReport(QWidget *parent, QtShared::SharedModuleManager modmgr);
    virtual ~IssueReport();

    virtual bool DoSaveSettings(pugi::xml_node node) const override;
    virtual bool DoLoadSettings(const pugi::xml_node node) override;
protected:
protected slots:
    void IssueCreated(QtShared::Issue);
    void IssueRemoved(QtShared::Issue);

    void Refresh();

    void ShowContextMenu(const QPoint &);
    void ItemDoubleClicked(const QModelIndex&);
private: 
    QtShared::SharedModuleManager moduleManager;
    std::unique_ptr<Ui::IssueReportDock> m_Ui;
    std::unique_ptr<QStandardItemModel> m_ViewModel;
};                   


} //namespace DockWindows 
} //namespace Editor 
} //namespace MoonGlare 

