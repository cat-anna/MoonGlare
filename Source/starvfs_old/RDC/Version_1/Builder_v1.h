/*
  * Generated by cppsrc.sh
  * On 2016-01-01 18:40:09,38
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef Builder_v1_H
#define Builder_v1_H

namespace StarVFS {
namespace RDC {
namespace Version_1 {

class Builder_v1 : public Builder {
public:
 	Builder_v1();
 	virtual ~Builder_v1();

	Sections::StringTable* CreateStringTableSection();
	Sections::MountEntrySection* CreateMountEntrySection();
	Sections::OffsetDataBlockTable* CreateOffsetDataBlockTable();
	Sections::RawDataSection* CreateRawDataSection();
	Sections::FileStructureTable* CreateFileStructureTable();
	Sections::HashTableSection* CreateHashTable();

	virtual VersionValue GetVersion() const override { return VersionValue::Make(1, 0); }
	
	using SectionEnumerateFunc = std::function<void(Sections::BaseSection*)>;
	void ForEachSection(SectionEnumerateFunc func);
protected:
	virtual void Reset() override;
	virtual bool WriteSections() override;
	virtual bool WriteFileFooter() override;
private:
	struct PrivateData;
	std::unique_ptr<PrivateData> m_Data;
	bool m_RawDataSectionCrated;
};

} //namespace Version_1
} //namespace RDC 
} //namespace StarVFS 

#endif
