/*
  * Generated by cppsrc.sh
  * On 2016-01-01 18:40:19,68
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include "nRDC.h"

#include "Version_1/Builder_v1.h"

namespace StarVFS {
namespace RDC {

Builder::Builder() {
	m_Flags.intval = 0;
}

Builder::~Builder() {
	CloseFile();
}

//-----------------------------------------------------------------------------

bool Builder::BeginFile(const String &FileName) {
	if (m_Flags.Opened || m_FileDevice)
		return false;
	Reset();
	auto dev = std::make_unique<BlockFileDevice>();
	if (!dev->CreateFile(FileName)) {
		//todo: log
		return false;
	}
	dev->SetBlockAlignValue(Settings::BlockAlignmentValue);
	m_FileDevice.swap(dev);

	if (!WriteFileHeader()) {
		//todo: log;
		m_FileDevice.reset();
		return false;
	}

	m_Flags.Opened = 1;
	return true;
}

bool Builder::CloseFile() {
	if (!m_Flags.Opened)
		return false;

	if (!WriteSections()) {
		//todo: log
		return false;
	}

	if (!WriteFileFooter()) {
		//todo: log
		return false;
	}

	m_FileDevice.reset();
	m_Flags.Opened = 0;
	return true;
}

//-----------------------------------------------------------------------------

bool Builder::WriteFileHeader() {
	FileHeader header;
	header.Version = GetVersion();

	return m_FileDevice->WriteAt(0, (char*)&header, sizeof(header));
}

//-----------------------------------------------------------------------------

} //namespace RDC 
} //namespace StarVFS 
