/*
  * Generated by cppsrc.sh
  * On 2015-12-17 21:59:15,19
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef RDCExporter_H
#define RDCExporter_H

namespace StarVFS {
namespace Exporters {

class RDCExporter : public iExporter {
public:
 	RDCExporter(StarVFS *svfs);
 	virtual ~RDCExporter();

	virtual std::unique_ptr<AttributeMapInstance> GetAttributeMapInstance() const {
		auto atm = CreateAttributeMapInstance<RDCExporter>();
		atm->AddAttrib("CompressionMode", &RDCExporter::GetCompressionMode, &RDCExporter::SetCompressionMode);
		atm->AddAttrib("CompressionLevel", &RDCExporter::GetCompressionLevel, &RDCExporter::SetCompressionLevel);

		return std::unique_ptr<AttributeMapInstance>(atm.release());
	}

	void SetCompressionMode(const String& value);
	const String& GetCompressionMode() const;

	void SetCompressionLevel(const String& value);
	const String& GetCompressionLevel() const;
private: 
	virtual ExportResult WriteLocalFile(const String &LocalFileName) override;
	struct Impl;
	std::unique_ptr<Impl> m_Impl;
};

} //namespace Exporters 
} //namespace StarVFS 

#endif
