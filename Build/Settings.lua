
local SettingsFileName = "BuildConfiguration.lua"

local function WriteConfig(data)
    local f = io.open(MoonGlare.SettingsFile, "w")
    if not f then
        print("Uable to open config file for writting")
		os.exit(1)
    end

    local dump
    dump = function (value, loc)
        local t = type(value)
        local action = {
            table = function(value, loc)
                f:write("{\n")
                for v,k in pairs(value) do
                    for i = 1,(loc+1) do f:write("\t"); end
                    f:write(v, " = ")
                    dump(k, loc+1)
                end
                for i = 1,loc do f:write("\t"); end
                f:write("}")
            end,
            number = function(value, loc)
                f:write(value)
            end,
            string = function(value, loc)
                f:write("[==[", value, "]==]")
            end,
            boolean = function(value, loc)
                f:write(tostring(value))
            end,
            ["nil"] = function(value, loc)
                f:write("nil")
            end,
        }
        (action[type(value)])(value, loc);
        if loc > 0 then
            f:write(",\n")
        else
            f:write("\n")
        end
    end

    f:write([[
--Automatically generated file. Be careful while editing.
--File may be overwritten and your changes may be lost.
--Generated by MoonGlare Engine build script generator

--To exclude module from being build set its value to 0 or false

local Settings = ]])
dump(data, 0)
f:write([[

return Settings
]])

    f:close()	
end

function MoonGlare.LoadSettings()
	MoonGlare.SettingsFile = dir.root .. SettingsFileName
	MoonGlare.Settings = { }
	
	print "Reading configuration..."
	local f = io.open(MoonGlare.SettingsFile, "rb")
    if f then
        f:close()
        MoonGlare.Settings = dofile(MoonGlare.SettingsFile)
		if not MoonGlare.Settings then
			print "Failed to read module configuration file"
			MoonGlare.Settings = { }
		end
    end
end

function MoonGlare.SaveSettings()
	print "Writting configuration..."
	
	WriteConfig(MoonGlare.Settings)
end

function MoonGlare.GetSettingsGroup(name, subgroupname)
	local group = MoonGlare.Settings[name]
	if not group then
		group = { }
		MoonGlare.Settings[name] = group
	end
	
	if subgroupname then
		local subgroup = group[subgroupname]
		if not subgroup then
			subgroup = { }
			group[subgroupname] = subgroup
		end
		return subgroup
	end
	
	return group
end

function MoonGlare.GetBuildSetting(info)
	local group = MoonGlare.GetSettingsGroup("Values", info.group)
	
	if info.group then
		info.FullName = info.group .. "/" .. info.name
	else
		info.FullName = info.name
	end
	info.default = info.default or ""
		
	if not group[info.name] then
		print(string.format("Please provide build configuration value [default:%s]: %s", info.default, info.FullName))
		io.flush(io.output())
		local inp = io.read("*l")
		group[info.name] = inp
	end
	
	return group[info.name]
end
