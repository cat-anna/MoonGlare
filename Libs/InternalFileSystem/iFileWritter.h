/*
  * Generated by cppsrc.sh
  * On 2015-02-26  1:07:52,02
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef iFileWritter_H
#define iFileWritter_H

namespace MoonGlare {
namespace FileSystem {

class iFileWritter : public GabiLib::GabiObject {
	GABI_DECLARE_ABSTRACT_CLASS(iFileWritter, GabiLib::GabiObject)
public:
 	iFileWritter(iContainer *Owner);
 	virtual ~iFileWritter();

	virtual FileSize Size() const = 0;
	virtual const string& FileName() const = 0;

	virtual bool SetFileData(const char* data, FileSize size) = 0;
	virtual bool SetFileData(FileReader reader);
	virtual bool OwnData(std::unique_ptr<char[]> data, FileSize size);

	iContainer *GetOwner() const { return m_Owner; }
private: 
	iContainer *m_Owner;
};

} //namespace FileSystem 
} //namespace MoonGlare 

#endif
