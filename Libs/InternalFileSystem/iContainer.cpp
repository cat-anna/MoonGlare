/*
  * Generated by cppsrc.sh
  * On 2015-02-26  0:40:38,80
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#include <pch.h>
#include "InternalFileSystem.h"
#include "iContainer.h"

namespace MoonGlare {
namespace FileSystem {

GABI_IMPLEMENT_ABSTRACT_CLASS(iContainer)

//-------------------------------------------------------------------------------------------------

iContainer::iContainer():
		BaseClass(),
		m_Flags(0) {
}

iContainer::~iContainer() {
}

void iContainer::DumpFileTree(ostream& out) const {
	LOG_ABSTRACT_FUNCTION();
#ifdef DEBUG_DUMP
	out << "Dumping is not supported by container: " << GetDynamicTypeInfo()->GetName() << "\n";
#endif
}

FileReader iContainer::GetFileReader(const string& file) const {
	LOG_ABSTRACT_FUNCTION();
	return nullptr;
}

FileReader iContainer::GetFileReader(const RawFilePointer *file) const {
	LOG_ABSTRACT_FUNCTION();
	return nullptr;
}

FileWritter iContainer::GetFileWritter(const string& file) {
	LOG_ABSTRACT_FUNCTION();
	return nullptr;
}

FileWritter iContainer::GetFileWritter(const RawFilePointer *file) {
	LOG_ABSTRACT_FUNCTION();
	return nullptr;
}

bool iContainer::FileExists(const string& file) const {
	LOG_ABSTRACT_FUNCTION();
	return false;
}

size_t iContainer::FilesCount() const {
	LOG_ABSTRACT_FUNCTION();
	return 0;
}

size_t iContainer::ContainerSize() const {
	LOG_ABSTRACT_FUNCTION();
	return 0;
}

bool iContainer::EnumerateFolder(const RawFilePointer *root, FolderEnumerateFunc func) const {
	LOG_ABSTRACT_FUNCTION();
	return false;
}

const string& iContainer::GetFileName() const {
	static string s = "{?}";
	return s;
}

const string& iContainer::GetContainerName() const {
	return GetFileName();
}

} //namespace FileSystem 
} //namespace MoonGlare 
