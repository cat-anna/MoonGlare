/*
  * Generated by cppsrc.sh
  * On 2015-02-26  2:03:01,16
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef MoonGlareContainer_H
#define MoonGlareContainer_H

namespace MoonGlare {
namespace FileSystem {
namespace MoonGlareContainer {

using UniqueCharTable = std::unique_ptr < char[] > ;

struct ContainerException : public std::exception {
	virtual const char * what() const { return m_msg.c_str(); }

	ContainerException(const char *fmt, ...) { 
		char buf[1024 * 16];
		va_list argptr;
		va_start(argptr, fmt);
		vsnprintf(buf, sizeof(buf), fmt, argptr);
		va_end(argptr);
		m_msg = "Container exception: ";
		m_msg += buf;
	}
private:
	std::string m_msg;
};

} //namespace MoonGlareContainer 
} //namespace FileSystem 
} //namespace MoonGlare 

#define RDC_EXTENSION ".rdc"

#include "Headers.h"
#include "ContainerHeaders.h"
#include "Encryption.h"
#include "ContainerFile.h"
#include "Reader.h"
#include "Writter.h"

#endif
