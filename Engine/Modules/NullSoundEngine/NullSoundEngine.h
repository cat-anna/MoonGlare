/*
	Generated by cppsrc.sh
	On 2015-01-22  6:51:10,16
	by Paweu
*/

#pragma once
#ifndef NullSoundEngine_H
#define NullSoundEngine_H

namespace MoonGlare {
namespace Modules {
namespace NullSoundEngine {

using namespace ::MoonGlare::Sound; 

class NullSoundEngine : public iSoundEngine {
	friend struct SoundEngineDebugApi;
	GABI_DECLARE_STATIC_CLASS(NullSoundEngine, iSoundEngine);
	DECLARE_EXCACT_SCRIPT_CLASS_GETTER();
public:
	NullSoundEngine();
 	~NullSoundEngine();

	virtual bool Initialize() override;
	virtual bool Finalize() override;

	void ConfigurationChanged(SettingsGroup what);

	/** Looks for both sounds and musics */
	virtual void ScanForSounds() override;

	virtual void RegisterSound(string Name, string FileName) override;
	virtual void RegisterMusic(string Name, string FileName) override;

	virtual void PlaySound(const string &Name) override;
	virtual void PlayMusic(const string &Name) override;

	virtual void PlaySoundScript(const string &Name, const string &Func, int param) override;
	virtual void PlayMusicScript(const string &Name, const string &Func, int param) override;
	virtual void PlaySoundTimer(const string &Name, Object *sender, int tid) override;
	virtual void PlayMusicTimer(const string &Name, Object *sender, int tid) override;

	virtual void StopMusic() override;

	virtual void SetPlayList(const string& PlayListName) override;
	virtual void RunPlayList() override;

	virtual void SoundNotifyEnd(iSound* s) override;
	virtual void HandleSoundEndAction(SoundEndAction action, iSound *sound) override;

	virtual void EnumerateAudio(EnumerationFunc func) override;

	virtual void DumpContent(std::ostream &out) override;
	static void RegisterScriptApi(ApiInitializer &api);

	virtual iSound* GetSound(const string & Name) override;
	virtual iSound* GetMusic(const string & Name) override;
};

} //namespace NullSoundEngine 
} //namespace Modules 
} //namespace MoonGlare 

#endif
