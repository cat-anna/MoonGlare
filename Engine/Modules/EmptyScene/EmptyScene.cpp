/*
  * Generated by cppsrc.sh
  * On 2015-03-07 23:01:04,40
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include <pch.h>
#include <MoonGlare.h>
#include <Engine/ModulesManager.h>
#include <Engine/GUI/nGUI.h>
#include "EmptyScene.h"

namespace MoonGlare {
namespace Modules {
namespace EmptyScene {

struct EmptySceneModule : public MoonGlare::Modules::ModuleInfo {
	EmptySceneModule(): BaseClass("EmptyScene", ModuleType::Functional) { }
};
DEFINE_MODULE(EmptySceneModule);

//----------------------------------------------------------------

GABI_IMPLEMENT_CLASS(EmptyScene);
RegisterApiDerivedClass(EmptyScene, &EmptyScene::RegisterScriptApi);
::Core::Scene::SceneClassRegister::Register<EmptyScene> EmptySceneReg;

EmptyScene::EmptyScene():
		BaseClass() {
}

EmptyScene::~EmptyScene() {
}

//----------------------------------------------------------------

void EmptyScene::RegisterScriptApi(ApiInitializer &api) {
	api
	.deriveClass<ThisClass, BaseClass>("cEmptyScene")
	.endClass();
}

//----------------------------------------------------------------

void EmptyScene::DoMove(const Core::MoveConfig &conf) {
	BaseClass::DoMove(conf);
}

//----------------------------------------------------------------

void EmptyScene::BeginScene() {
	BaseClass::BeginScene();
}

void EmptyScene::EndScene() {
	BaseClass::EndScene();
}

//----------------------------------------------------------------

int EmptyScene::InvokeOnEscape() { SCRIPT_INVOKE(OnEscape); }
int EmptyScene::InvokeOnTimer(int TimerID) { SCRIPT_INVOKE(OnTimer, TimerID); }
int EmptyScene::InvokeOnBeginScene() { SCRIPT_INVOKE(OnBeginScene); }
int EmptyScene::InvokeOnEndScene() { SCRIPT_INVOKE(OnEndScene); }
int EmptyScene::InvokeOnInitialize() { SCRIPT_INVOKE(OnInitialize); }
int EmptyScene::InvokeOnFinalize() { SCRIPT_INVOKE(OnFinalize); }

} //namespace EmptyScene 
} //namespace Modules 
} //namespace MoonGlare 
