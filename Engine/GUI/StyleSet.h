/*
  * Generated by cppsrc.sh
  * On 2015-03-08 10:04:54,22
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef StyleSet_H
#define StyleSet_H

namespace MoonGlare {
namespace GUI {

struct StyleSet : public cRootClass {
	GABI_DECLARE_STATIC_CLASS(StyleSet, cRootClass);
	DISABLE_COPY();
public:
	Style Regular;
	Style Focused;
	Style Hovered;

	DefineDirectGetterAll(Owner, StyleManager*);
	DefineRefGetterConst(Name, string);

	bool LoadMeta(xml_node node);
	SharedAnimation GetAnimation(const Style *style, const string& Name) const;

	StyleSet(StyleManager *Owner);
	~StyleSet();
protected:
	struct AnimationInfo {
		mutable WeakAnimation Ptr;
		xml_node Description;
	};
	using AnimationCache = std::unordered_map < string, const AnimationInfo* > ;
	using AnimationList = std::unordered_map < string, AnimationInfo > ;

	mutable AnimationCache m_AnimCache;
	AnimationList m_AnimTable;

	StyleManager *m_Owner;
	string m_Name;

	SharedAnimation LoadAnimation(const AnimationInfo *info) const;
};

} //namespace GUI 
} //namespace MoonGlare 

#endif
