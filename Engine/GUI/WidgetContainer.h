/*
  * Generated by cppsrc.sh
  * On 2015-03-01 11:03:08,06
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef WidgetContainer_H
#define WidgetContainer_H

namespace MoonGlare {
namespace GUI {

/** Not a widget, just shared implementation of widget list. */
class WidgetContainer {
public:
 	WidgetContainer();
 	~WidgetContainer();
	

	using WidgetList = std::list < Widget > ;

	using iterator = WidgetList::iterator;
	using const_iterator = WidgetList::const_iterator;

	iterator begin() { return m_List.begin(); }
	iterator end() { return m_List.end(); }
	const_iterator begin() const { return m_List.begin(); }
	const_iterator end() const { return m_List.end(); }

	size_t Count() const { return m_List.size(); }

	void Add(iWidget *ptr);
	void Add(Widget &w);
	void Remove(iWidget *ptr);
	void Clean();

	void CreateChildren(Utils::Scripts::TableDispatcher &table, iWidget *parent);
private: 
	WidgetList m_List;
};

} //namespace GUI 
} //namespace MoonGlare 

#endif

