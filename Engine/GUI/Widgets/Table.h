/*
  * Generated by cppsrc.sh
  * On 2015-03-19 21:29:57,04
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef Table_H
#define Table_H

namespace MoonGlare {
namespace GUI {
namespace Widgets {

class TablePanel;

class Table : public iWidget {
	GABI_DECLARE_STATIC_CLASS(Table, iWidget)
	DECLARE_EXCACT_SCRIPT_CLASS_GETTER();
public:
 	Table(iWidget *Parent);
 	virtual ~Table();

	virtual void Draw(Graphic::MatrixStack &dev) override; 
	virtual void Process(const Core::MoveConfig &conf) override;

	virtual void RecalculateMetrics() override;
	virtual void Lock() override;
	virtual void Unlock() override;

	virtual iWidget* GetWidgetAt(const Point &p) const override;

	void SetCellCount(UnsignedPoint point);
	const UnsignedPoint& GetCellCount() const { return m_CellCount; }

	Panel* GetPanelByIndex(unsigned index) const;
	Panel* GetPanelByPosition(const UnsignedPoint &point) const { return GetPanelByIndex(LocationToIndex(point)); }
	void SetWidget(Widget &w, unsigned index);
	void SetWidget(iWidget *w, unsigned index) { Widget p(w); SetWidget(p, index); }
	void SetWidgetByPosition(Widget &w, UnsignedPoint point) { return SetWidget(w, LocationToIndex(point)); }
	void SetWidgetByPosition(iWidget *w, UnsignedPoint point) { Widget p(w); return SetWidget(p, LocationToIndex(point)); }

	iWidget* FindWidget(const string& name) const override; 

	virtual void ScriptSet(Utils::Scripts::TableDispatcher &table) override;
	virtual void SetStyle(SharedStyleSet style) override;

	static void RegisterScriptApi(ApiInitializer &api);

	unsigned LocationToIndex(const UnsignedPoint &point) const {
		unsigned i = static_cast<unsigned>(point[0] + point[1] * m_CellCount[0]);
		if (m_MaxCellIndex <= i)
			return static_cast<unsigned>(~0); // no such index
		return i;
	}

	UnsignedPoint IndexToLocation(unsigned index) const {
		if (m_MaxCellIndex == 0)
			return UnsignedPoint(0);
		return UnsignedPoint(index % m_CellCount[0], index / m_CellCount[0]);
	}
protected:
	UnsignedPoint m_CellCount;
	unsigned m_MaxCellIndex;
	std::vector<std::unique_ptr<TablePanel>> m_Table;
};
} //namespace Widgets 
} //namespace GUI 
} //namespace MoonGlare 

#endif
